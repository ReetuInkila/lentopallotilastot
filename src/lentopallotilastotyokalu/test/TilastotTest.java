package lentopallotilastotyokalu.test;
// Generated by ComTest BEGIN
import java.io.File;
import lentopallotilastotyokalu.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.03.30 14:02:58 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class TilastotTest {



  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta60 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta60() throws SailoException {    // Tilastot: 60
    Tilastot tilastot = new Tilastot(); 
    Tilasto tilasto1 = new Tilasto(), tilasto2 = new Tilasto(); 
    tilasto1.taytaEsimerkkiTiedoilla(5); 
    tilasto2.taytaEsimerkkiTiedoilla(5); 
    String testiTiedosto = "testitilastot"; 
    File ftied = new File(testiTiedosto+".dat"); 
    ftied.delete(); 
    try {
    tilastot.lueTiedostosta(testiTiedosto); 
    fail("Tilastot: 71 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    tilastot.lisaa(tilasto1); 
    tilastot.lisaa(tilasto2); 
    tilastot.tallenna(); 
    tilastot = new Tilastot();  // Poistetaan vanhat luomalla uusi
    tilastot.lueTiedostosta(testiTiedosto);  // johon ladataan tiedot tiedostosta.
    Iterator<Tilasto> i = tilastot.iterator(); 
    assertEquals("From: Tilastot line: 78", tilasto1.toString(), i.next().toString()); 
    assertEquals("From: Tilastot line: 79", tilasto2.toString(), i.next().toString()); 
    assertEquals("From: Tilastot line: 80", false, i.hasNext()); 
    tilastot.lisaa(tilasto2); 
    tilastot.tallenna(); 
    assertEquals("From: Tilastot line: 83", true, ftied.delete()); 
    File fbak = new File(testiTiedosto+".bak"); 
    assertEquals("From: Tilastot line: 85", true, fbak.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIterator184 */
  @Test
  public void testIterator184() {    // Tilastot: 184
    Tilastot tilastoidut = new Tilastot(); 
    Tilasto tilasto21 = new Tilasto(2); tilastoidut.lisaa(tilasto21); 
    Tilasto tilasto11 = new Tilasto(1); tilastoidut.lisaa(tilasto11); 
    Tilasto tilasto22 = new Tilasto(2); tilastoidut.lisaa(tilasto22); 
    Tilasto tilasto12 = new Tilasto(1); tilastoidut.lisaa(tilasto12); 
    Tilasto tilasto23 = new Tilasto(2); tilastoidut.lisaa(tilasto23); 
    Iterator<Tilasto> i2=tilastoidut.iterator(); 
    assertEquals("From: Tilastot line: 196", tilasto21, i2.next()); 
    assertEquals("From: Tilastot line: 197", tilasto11, i2.next()); 
    assertEquals("From: Tilastot line: 198", tilasto22, i2.next()); 
    assertEquals("From: Tilastot line: 199", tilasto12, i2.next()); 
    assertEquals("From: Tilastot line: 200", tilasto23, i2.next()); 
    try {
    assertEquals("From: Tilastot line: 201", tilasto12, i2.next()); 
    fail("Tilastot: 201 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaTilastot216 */
  @Test
  public void testAnnaTilastot216() {    // Tilastot: 216
    Tilastot tilastoidut = new Tilastot(); 
    Tilasto tilasto21 = new Tilasto(2); tilastoidut.lisaa(tilasto21); 
    Tilasto tilasto11 = new Tilasto(1); tilastoidut.lisaa(tilasto11); 
    Tilasto tilasto22 = new Tilasto(2); tilastoidut.lisaa(tilasto22); 
    Tilasto tilasto12 = new Tilasto(1); tilastoidut.lisaa(tilasto12); 
    Tilasto tilasto23 = new Tilasto(2); tilastoidut.lisaa(tilasto23); 
    Tilasto tilasto51 = new Tilasto(5); tilastoidut.lisaa(tilasto51); 
    List<Tilasto> loytyneet; 
    loytyneet = tilastoidut.annaTilastot(3); 
    assertEquals("From: Tilastot line: 229", 0, loytyneet.size()); 
    loytyneet = tilastoidut.annaTilastot(1); 
    assertEquals("From: Tilastot line: 231", 2, loytyneet.size()); 
    assertEquals("From: Tilastot line: 232", true, loytyneet.get(0) == tilasto11); 
    assertEquals("From: Tilastot line: 233", true, loytyneet.get(1) == tilasto12); 
    loytyneet = tilastoidut.annaTilastot(5); 
    assertEquals("From: Tilastot line: 235", 1, loytyneet.size()); 
    assertEquals("From: Tilastot line: 236", true, loytyneet.get(0) == tilasto51); 
  } // Generated by ComTest END
}